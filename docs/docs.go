// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Cristiano Altmann",
            "email": "crisaltmann@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/crisaltmann/fundament-stock-api"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assets": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna a lista de ativos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/asset_api.AssetResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Insere Ativo",
                "parameters": [
                    {
                        "description": "User-Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/asset_api.AssetPostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/assets/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna a ativo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/asset_api.AssetResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Atualiza Ativo",
                "parameters": [
                    {
                        "description": "User-Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/asset_api.AssetPutRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna a lista de ordens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order_api.OrderGetResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Insere Ordem",
                "parameters": [
                    {
                        "description": "User-Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order_api.OrderPostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "asset_api.AssetPostRequest": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "asset_api.AssetPutRequest": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "asset_api.AssetResponse": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "order_api.OrderGetResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_ativo": {
                    "type": "integer"
                },
                "id_usuario": {
                    "type": "integer"
                },
                "quantidade": {
                    "type": "integer"
                },
                "tipo": {
                    "type": "string"
                },
                "valor": {
                    "type": "number"
                }
            }
        },
        "order_api.OrderPostRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "id_ativo": {
                    "type": "integer"
                },
                "id_usuario": {
                    "type": "integer"
                },
                "quantidade": {
                    "type": "integer"
                },
                "tipo": {
                    "type": "string"
                },
                "valor": {
                    "type": "number"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Fundament Stock Api Swagger API",
	Description: "Swagger API for Fundament Stock Api.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
